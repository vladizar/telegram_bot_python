import telebot
import weather
import similar_celebrities

from PIL import Image
from telebot import types
from random import randint

# The Message object also has a content_typeattribute, which defines the type of the Message. content_type can be one of the following strings: text, audio, document, photo, sticker, video, video_note, voice, location, contact, new_chat_members, left_chat_member, new_chat_title, new_chat_photo, delete_chat_photo, group_chat_created, supergroup_chat_created, channel_chat_created, migrate_to_chat_id, migrate_from_chat_id, pinned_message.

API_TOKEN        = "your_telegram_api_token"
STICKERS_FOLDER  = "#static/stickers"
DOWNLOADS_FOLDER = "#static/downloads"

RANDOM_BTN_TXT    = "üé≤ –ë—ã—Å—Ç—Ä—ã–π –†–∞–Ω–¥–æ–º"
WEATHER_BTN_TXT   = "‚òÄÔ∏è –ü–æ–≥–æ–¥–∞"
REPEATER_BTN_TXT  = "üó£ –ü–æ–≤—Ç–æ—Ä—è–ª–∞"
CELEBRITY_BTN_TXT = "ü§© –ó–Ω–∞–º–µ–Ω–∏—Ç–æ—Å—Ç—å"

shown_celebrities_num = None

bot = telebot.TeleBot(API_TOKEN)

@bot.message_handler(commands=["start", "help"])
def start_chat(msg):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    btn1   = types.KeyboardButton(RANDOM_BTN_TXT)
    btn2   = types.KeyboardButton(WEATHER_BTN_TXT)
    btn3   = types.KeyboardButton(REPEATER_BTN_TXT)
    btn4   = types.KeyboardButton(CELEBRITY_BTN_TXT)
    markup.add(btn1, btn2, btn3, btn4)

    bot.send_message(msg.chat.id, f"–•–∞–π, {msg.from_user.first_name} {msg.from_user.last_name}!!!\n–¢–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–≤–æ–π –∂–µ –±–æ—Ç, –µ—Å–ª–∏ —Ç—ã Vlad Zarytskyi", reply_markup=markup)

    with open(f"{STICKERS_FOLDER}/cat.webp", "rb") as sticker:
        bot.send_sticker(msg.chat.id, sticker)

    with open(f"{STICKERS_FOLDER}/meow.webp", "rb") as sticker:
        bot.send_sticker(msg.chat.id, sticker)

    bot.send_message(msg.chat.id, f"–ê –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ —Ç—ã –≤—Å–µ —Ä–∞–≤–Ω–æ —Ç–æ–ø—á–∏–∫!üòâ")

@bot.message_handler(content_types=["text"])
def reply_text(msg):
    if msg.chat.type == "private":
        if msg.text == RANDOM_BTN_TXT:
            bot.reply_to(msg, f"–í–∞–º –≤—ã–ø–∞–ª–∞ —Ü–∏—Ñ—Ä–∞ {randint(1, 6)}")
        elif msg.text == WEATHER_BTN_TXT:
            bot.reply_to(msg, "–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ —É–∑–Ω–∞—Ç—å –¥–ª—è –≤–∞—Å –ø–æ–≥–æ–¥—É? üßê")
            bot.register_next_step_handler(msg, send_weather)
        elif msg.text == REPEATER_BTN_TXT:
            markup = types.InlineKeyboardMarkup()
            btn1   = types.InlineKeyboardButton("ü§¨ –î–∞–≤–∞–π –ø–æ–º–æ–ª—á–∏–º!!!", callback_data="silence")
            markup.add(btn1)
            bot.reply_to(msg, "–¢–µ–ø–µ—Ä—å —è –ø—Ç–∏—Ü–∞ –≥–æ–≤–æ—Ä—É–Ω, —Å–∞–º –∑–Ω–∞–µ—à—å —á–µ–º –æ—Ç–ª–∏—á–∞—é—Å—å!\n–ê –µ—â–µ —Ç–µ–ø–µ—Ä—å —è –±—É–¥—É –ø–æ–≤—Ç–æ—Ä—è—Ç—å –∫–∞–∂–¥–æ–µ —Ç–≤–æ–µ —Å–ª–æ–≤–æ –ø–æ–∫–∞ –ï–Ω–µ—Ä–≥–∏—è –í—Å–µ–ª–µ–Ω–Ω–æ–π –Ω–µ –ò—Å—á–µ—Ä–ø–∞–µ—Ç—Å—è (–Ω—É –∏–ª–∏ —Ç—ã –Ω–∞–∂–º–µ—à—å –Ω–∞ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–æ—á–∫—É üòÄ)", reply_markup=markup)
            bot.register_next_step_handler(msg, repeater_mode)
        elif msg.text == CELEBRITY_BTN_TXT:
            bot.reply_to(msg, "–°–∫–æ–ª—å–∫–æ –ø–æ—Ö–æ–∂–∏—Ö –∑–Ω–∞–º–µ–Ω–∏—Ç–æ—Å—Ç–µ–π –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å?")
            bot.register_next_step_handler(msg, celebrities_num)
        else:
            bot.reply_to(msg, "–ú–Ω–µ –Ω–µ —Ä–∞—Å—Å–∫–∞–∑–∞–ª–∏ –∫–∞–∫ –Ω–∞ —ç—Ç–æ –æ—Ç–≤–µ—á–∞—Ç—å üôÑ.\n–•–Ω—ã–∫-—Ö–Ω—ã–∫üò≠")

@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    if call.data == "silence":
        bot.send_message(call.message.chat.id, "–Ø –≤–Ω–µ–∑–∞–ø–Ω–æ –ø–æ—Ç–µ—Ä—è–ª –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä—è—Ç—å –∑–∞ —Ç–æ–±–æ–π\n–•–Ω—ã–∫-—Ö–Ω—ã–∫üò≠")
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=call.message.text, reply_markup=None)
        bot.clear_step_handler_by_chat_id(chat_id=call.message.chat.id)

def repeater_mode(msg):
    markup = types.InlineKeyboardMarkup()
    btn1   = types.InlineKeyboardButton("ü§¨ –î–∞–≤–∞–π –ø–æ–º–æ–ª—á–∏–º!!!", callback_data="silence")
    markup.add(btn1)
    bot.reply_to(msg, f"{msg.text}", reply_markup=markup)
    bot.register_next_step_handler(msg, repeater_mode)

def send_weather(msg):
    try:
        bot.reply_to(msg, f"{weather.get_weather(msg.text)}\n–û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –µ—â–µ ü§ó")
    except Exception:
        bot.reply_to(msg, "–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ ü§î\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π üòá")

def celebrities_num(msg):
    try:
        global shown_celebrities_num
        shown_celebrities_num = int(msg.text)
    except Exception:
        bot.reply_to(msg, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–º–µ–Ω–∏—Ç–æ—Å—Ç–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–∏—Ñ—Ä–æ–π...")
        return None

    if 0 < shown_celebrities_num < 210:
        bot.reply_to(msg, "–û–∫.üòâ –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≤–∞—à–µ üñº—Ñ–æ—Ç–æ, –∏ —è —Å–∫–∞–∂—É –Ω–∞ –∫–æ–≥–æ –∏–∑ ‚ú®–∑–Ω–∞–º–µ–Ω–∏—Ç–æ—Å—Ç–µ–π‚ú® –≤—ã –ø–æ—Ö–æ–∂–∏ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ")
        bot.register_next_step_handler(msg, find_celebrities)
    else:
        bot.reply_to(msg, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–º–µ–Ω–∏—Ç–æ—Å—Ç–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ —á–µ–º 1 –∏ –º–µ–Ω—å—à–µ 211...")

def find_celebrities(msg):
    if msg.content_type == "photo":
        photo_index = len(msg.photo) - 1
        photo_info  = bot.get_file(msg.photo[photo_index].file_id)

        photo = bot.download_file(photo_info.file_path)

        with open(f"{DOWNLOADS_FOLDER}/{msg.photo[photo_index].file_id}.jpg", "wb") as new_photo:
            new_photo.write(photo)

        with open("#ppl/normal/0.jpg", "wb") as new_photo:
            new_photo.write(photo)

        celebrities = similar_celebrities.get_similar_celebrities(shown_celebrities_num)

        if celebrities:
            for i, person in enumerate(celebrities):
                photo_caption = f"{shown_celebrities_num - i}. {person['name']}.\n–û—á–∫–∏ —Å—Ö–æ–∂–µ—Å—Ç–∏: {round(1000 - person['distance'] * 1000)} –∏–∑ 1000\n"
                if person["distance"] < 0.46:
                    photo_caption += f"–í—ã –∏ {person['name']} - –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ —á–µ–ª–æ–≤–µ–∫! –Ø –≤–∞—Å —Ä–∞—Å—Å–∫—É—Å–∏–ª)"
                elif person["distance"] < 0.56:
                    photo_caption += f"–û–¥–Ω–æ –ª–∏—Ü–æ!!!"
                elif person["distance"] < 0.61:
                    photo_caption += f"–í—ã –æ–æ–æ–æ—á–µ–Ω—å –ø–æ—Ö–æ–∂–∏!!"
                elif person["distance"] < 0.66:
                    photo_caption += f"–í—ã –ø–æ—Ö–æ–∂–∏!"
                elif person["distance"] < 0.76:
                    photo_caption += f"–í—ã —á—É—Ç—å-—á—É—Ç—å –ø–æ—Ö–æ–∂–∏..."
                elif person["distance"] < 0.86:
                    photo_caption += f"–í—ã –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ—Ö–æ–∂–∏!"
                else:
                    photo_caption += f"–í—ã –ø–æ—á—Ç–∏ –Ω–µ –ø–æ—Ö–æ–∂–∏!!"

                with open(person["image"], "rb") as photo:
                    try:
                        bot.send_photo(msg.chat.id, photo, photo_caption)
                    except Exception:
                        bot.send_message(msg.chat.id, f"{photo_caption}\nü§ñ–ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–∞–π–ª—ã –±–æ–ª—å—à–µ üíæ10–º–±, —Ö–æ—Ç—å –∏ –ø–æ–ø—ã—Ç–∞–ª—Å—è üòÄ\n‚úçÔ∏è–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, üë®üèª‚Äçüíª@vladizar123üë®üèª‚Äçüíª, —á—Ç–æ –±—ã –ø–æ—Å–º–æ—Ç—Ä–µ–ª üñº—Ñ–æ—Ç–æ #{person['image'].split('/')[-1].split('.')[0].strip('picture')}")
        else:
            bot.reply_to(msg, f"–ò–∑–≤–∏–Ω–∏—Ç–µ, –µ—Å–ª–∏ –æ–±–∏–¥–µ–ª üôÇ\n–Ø –Ω–µ –Ω–∞—à–µ–ª –Ω–∞ —ç—Ç–æ–º —Ñ–æ—Ç–æ –ª–∏—Ü–∞. –°–æ–≤—Å–µ–º. –ù–∏–∫–∞–∫–æ–≥–æ. üßêü§î")
    else:
        bot.reply_to(msg, "–ú–æ–π üñ•–∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–π ü§ì—Ä–∞–∑—É–º –ø–æ–¥—Å–∫–∞–∑–∞–ª –º–Ω–µ, —á—Ç–æ —ç—Ç–æ –Ω–µ –∫–∞—Ä—Ç–∏–Ω–∫–∞...\n–ó–∞—á–µ–º –≤—ã —Ç–∞–∫ —Å–æ –º–Ω–æ–π? üò¢")

bot.polling()